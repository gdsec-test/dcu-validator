# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import schedule_service_pb2 as schedule__service__pb2


class SchedulerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddSchedule = channel.unary_unary(
        '/scheduler.Scheduler/AddSchedule',
        request_serializer=schedule__service__pb2.Request.SerializeToString,
        response_deserializer=schedule__service__pb2.Response.FromString,
        )
    self.RemoveSchedule = channel.unary_unary(
        '/scheduler.Scheduler/RemoveSchedule',
        request_serializer=schedule__service__pb2.Request.SerializeToString,
        response_deserializer=schedule__service__pb2.Response.FromString,
        )
    self.ValidateTicket = channel.unary_unary(
        '/scheduler.Scheduler/ValidateTicket',
        request_serializer=schedule__service__pb2.Request.SerializeToString,
        response_deserializer=schedule__service__pb2.ValidationResponse.FromString,
        )


class SchedulerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def AddSchedule(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveSchedule(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ValidateTicket(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SchedulerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddSchedule': grpc.unary_unary_rpc_method_handler(
          servicer.AddSchedule,
          request_deserializer=schedule__service__pb2.Request.FromString,
          response_serializer=schedule__service__pb2.Response.SerializeToString,
      ),
      'RemoveSchedule': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveSchedule,
          request_deserializer=schedule__service__pb2.Request.FromString,
          response_serializer=schedule__service__pb2.Response.SerializeToString,
      ),
      'ValidateTicket': grpc.unary_unary_rpc_method_handler(
          servicer.ValidateTicket,
          request_deserializer=schedule__service__pb2.Request.FromString,
          response_serializer=schedule__service__pb2.ValidationResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'scheduler.Scheduler', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
